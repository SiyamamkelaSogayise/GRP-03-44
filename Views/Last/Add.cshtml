<!DOCTYPE html>
<html lang="en">
@{
    Layout = "_LayoutFormBooking";
}
@model GeeksProject02.Models.LastViewModel
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        input[type=text], input[type=email], input[type=tel], select {
            width: 100%;
            padding: 12px 20px;
            margin: 8px 0;
            display: inline-block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        input[type=submit] {
            width: 100%;
            background-color: #4CAF50;
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            input[type=submit]:hover {
                background-color: #45a049;
            }

        textarea {
            width: 100%;
            padding: 12px 20px;
            margin: 8px 0;
            display: inline-block;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        div {
            border-radius: 5px;
            background-color: #f2f2f2;
            padding: 20px;
        }

        .field-validation-error {
            color: red;
        }

    </style>
</head>

<body>
<section class="w3l-about-breadcrumb" color="orange">
    <div class="breadcrumb-bg breadcrumb-bg-contact py-5" color="orange">
        <div class="container py-lg-5 py-md-3">
            <h3><strong>Appointment Request</strong></h3>
            <p><br>Book your appointment with us by filling the form below</p>
        </div>
    </div>
</section>

<center><h2>Personal Information</h2></center>

@using (Html.BeginForm("Add", "Last", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true,"", new{@class="text-danger"})
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName)
        <input type="text" class="form-control" asp-for="FirstName" value="@Model.FirstName" required>
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName)
        <input type="text" class="form-control" asp-for="LastName" value="@Model.LastName" required>
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB)
        <input type="date" class="form-control" asp-for="DOB" required>
        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender)
        <select class="form-select" asp-for="Gender" required>
            <option value="male">Male</option>
            <option value="female">Female</option>
            <option value="non-binary">Non-binary</option>
            <option value="other">Other</option>
        </select>
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        <input type="email" class="form-control" asp-for="Email" value="@Model.Email" required>
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber)
        <input type="tel" class="form-control" asp-for="PhoneNumber" required>
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdditionalInfo)
        <textarea class="form-control" asp-for="AdditionalInfo" required></textarea>
        @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AppointmentDate)
        <input type="date" class="form-control" asp-for="AppointmentDate" required>
        @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="form-group">Do you belong to a Medical Aid:</label>
        @Html.DropDownListFor(model => model.IsMedicalAidMember, new SelectList(new List<SelectListItem>
    {
    new SelectListItem { Text = "No", Value = "false" },
    new SelectListItem { Text = "Yes", Value = "true" }
    }, "Value", "Text"), "Select", new { @class = "form-group", required = "required" })
        @Html.ValidationMessageFor(model => model.IsMedicalAidMember, "", new { @class = "text-danger" })
    </div>


    <div>
        <label class="form-group">Medical Aid Number(N/A if above is No):</label>
        <input type="text" class="form-control" placeholder="Medical Aid Number" asp-for="MedicalAidNumber">
        @Html.ValidationMessageFor(model => model.MedicalAidNumber, "", new { @class = "text-danger" })
    </div>

    <div>
        <label class="form-group">Medical Aid Name(N/A if not applicable):</label>
        <input type="text" class="form-control" placeholder="Medical Aid Name" asp-for="MedicalAidName">
        @Html.ValidationMessageFor(model => model.MedicalAidName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SelectedVaccine)
        <select class="form-select" asp-for="SelectedVaccine" asp-items="@Model.VaccineList" required></select>
        @Html.ValidationMessageFor(model => model.SelectedVaccine, "", new { @class = "text-danger" })
    </div>

    <fieldset>
        <input type="submit" value="Add" class="btn btn-primary" />
    </fieldset>
}
<</body>
</html>
